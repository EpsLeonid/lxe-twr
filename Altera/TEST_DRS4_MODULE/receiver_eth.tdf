TITLE "receiver_eth"; --ads5281"

INCLUDE "eth_rx";
INCLUDE "dp_ram_in";

SUBDESIGN receiver_eth   -- ads5281 

(
    reset                                     : input ;
    TXclk                                     : input ; 
	READY, RX_CLK, RX_DV, COL, CRS, RXD[3..0] : input ;
	Saddr[47..0]                              : input ;
	p[3..0]                                   : input ;
	Rkop[3..0],Rdev_number[3..0]              : output;
    Rstat_cor,Rpachka,Rcalibr                 : output;
	Rnumber_n[15..0],Rnumber_p[15..0]         : output; 
	Rzap_delay[15..0]                         : output;
	Daddr[47..0]                              : output;
	CheckDes,Rcheck, Rok                      : output;
	Rdestination                              : output;
	Raddr[15..0]                              : output; 
	Rdata[3..0]                               : output;
	rg_DACA[15..0],rg_DACB[15..0]             : output;
    rg_DACC[15..0],rg_DACD[15..0]             : output;
    rg_DACE[15..0],rg_DACF[15..0]             : output;
    rg_DACG[15..0],rg_DACH[15..0]             : output;
    
    foto_DACA[15..0]						 : output ; 
	foto_DACB[15..0] 	 					 : output ;
	foto_DACC[15..0] 						 : output ;
	foto_DACD[15..0] 	 					 : output ;
	foto_DACE[15..0] 						 : output ;
	foto_DACF[15..0]						 : output ;    
	foto_DACG[15..0] 						 : output ;
	foto_DACH[15..0] 						 : output ;
	
	rg_DAC_ROFS[15..0], rg_DAC_BIAS[15..0]	  : output;
    
    cou_rd_data[9..0]                         : input ;
    data_ou_eth[31..0]                        : output;
    data_in_eth[27..0]                        : output;
    waddr_eth[7..0]                           : output;
    wren                                      : output;
    n_burst[1..0]							  : output;
)

VARIABLE

    Receiver                                  : eth_rx;
    CheckDes,rx_dvd,rx_dvdd,clrCheckDes       : dffe ;
    Daddr[47..0]                              : dffe ;
    Rkop[3..0],Rdev_number[3..0]              : dffe ;
    Rstat_cor,Rpachka,Rcalibr                 : dffe ;
	Rnumber_n[15..0],Rnumber_p[15..0]         : dffe ; 
	Rzap_delay[15..0]                         : dffe ;
    Rdestination, Rsource, Rlength[15..0]     : node ;        
    Rdatafield, Raddr[15..0], Rdata[3..0]     : node ;
    Rcheck, Rok, Check                        : node ;
    rg_DACA[15..0],rg_DACB[15..0]             : dffe ;
    rg_DACC[15..0],rg_DACD[15..0]             : dffe ;
    rg_DACE[15..0],rg_DACF[15..0]             : dffe ;
    rg_DACG[15..0],rg_DACH[15..0]             : dffe ;
    
    foto_DACA[15..0]						 : dffe ; 
	foto_DACB[15..0] 	 					 : dffe ;
	foto_DACC[15..0] 						 : dffe ;
	foto_DACD[15..0] 	 					 : dffe ;
	foto_DACE[15..0] 						 : dffe ;
	foto_DACF[15..0]						 : dffe ;    
	foto_DACG[15..0] 						 : dffe ;
	foto_DACH[15..0] 						 : dffe ;
	
	rg_DAC_ROFS[15..0], rg_DAC_BIAS[15..0]	  : dffe ;
	
    dp_ram                                    : dp_ram_in;
    data_in_eth[27..0]                        : dffe ;
    waddr_eth[7..0]                           : dffe ;
    wren                                      : node ;
    data_ou_eth[31..0]                        : node ;
    n_burst[1..0]							  : dffe ;
            	              	  
Begin

-- ПРИЕМНИК канала связи Ethernet  

Receiver.ready      = READY;                          
Receiver.RX_CLK     = RX_CLK;
Receiver.RX_DV      = RX_DV;
Receiver.COL        = COL;
Receiver.CRS        = CRS;
Receiver.RXD[3..0]  = RXD[3..0];

Rdestination        = Receiver.stReceiveDestination;
Rsource             = Receiver.stReceiveSource;
Rlength[15..0]      = Receiver.RgLength[15..0];        
Rdatafield          = Receiver.stReceiveData;
Raddr[15..0]        = Receiver.addr_receive[15..0];
Rdata[3..0]         = Receiver.data[3..0];
Rcheck              = Receiver.en_check;
Rok                 = Receiver.Receive_OK;
Check               = Receiver.StCheck; 

-- переменные:

(CheckDes,rx_dvd,rx_dvdd,clrCheckDes,Daddr[]).clk = RX_CLK;
(rx_dvd,rx_dvdd,clrCheckDes,Daddr[]).clrn = reset;

-- Флаг совпадения поля адреса приемника информации с полем принимаемой посылки:

CheckDes.ena  = Rdestination;
CheckDes.clrn = !clrCheckDes;               -- установка в ноль в начале фрейма!

-- приемник

rx_dvd.d      = RX_DV;
rx_dvdd.d     = rx_dvd;

clrCheckDes.d   = rx_dvd & !rx_dvdd;

-- проверка адреса посылки, если совпадает с адресом фазометра CheckDes = 1
-- АДРЕС ЗАДАЕТСЯ ПЕРЕМЫЧКАМИ p[3..0]!

IF Rdestination THEN   
     CASE Raddr[3..0] IS
		WHEN 0  =>  CheckDes.d = (Rdata[] == Saddr[43..40]); 
		WHEN 1  =>  CheckDes.d = (Rdata[] == Saddr[47..44]) & CheckDes;
		WHEN 2  =>  CheckDes.d = (Rdata[] == Saddr[35..32]) & CheckDes;
		WHEN 3  =>  CheckDes.d = (Rdata[] == Saddr[39..36]) & CheckDes;
		WHEN 4  =>  CheckDes.d = (Rdata[] == Saddr[27..24]) & CheckDes;
		WHEN 5  =>  CheckDes.d = (Rdata[] == Saddr[31..28]) & CheckDes;
		WHEN 6  =>  CheckDes.d = (Rdata[] == Saddr[19..16]) & CheckDes;
		WHEN 7  =>  CheckDes.d = (Rdata[] == Saddr[23..20]) & CheckDes; 
		WHEN 8  =>  CheckDes.d = (Rdata[] == Saddr[11..8])  & CheckDes;
		WHEN 9  =>  CheckDes.d = (Rdata[] == Saddr[15..12]) & CheckDes;
		WHEN 10 =>  CheckDes.d = (Rdata[] == p[3..0])       & CheckDes;
		WHEN 11 =>  CheckDes.d = (Rdata[] == Saddr[7..4])   & CheckDes;
	   END CASE;
END IF;	

-- фиксируем адрес источника информации (Rsource)  
	
	Daddr[3..0].d     = Rdata[3..0];
	Daddr[7..4].d     = Rdata[3..0];
	Daddr[11..8].d    = Rdata[3..0];
	Daddr[15..12].d   = Rdata[3..0];
	Daddr[19..16].d   = Rdata[3..0];
	Daddr[23..20].d   = Rdata[3..0];
	Daddr[27..24].d   = Rdata[3..0];
	Daddr[31..28].d   = Rdata[3..0];
	Daddr[35..32].d   = Rdata[3..0];
	Daddr[39..36].d   = Rdata[3..0];
	Daddr[43..40].d   = Rdata[3..0];
	Daddr[47..44].d   = Rdata[3..0];
	
	Daddr[43..40].ena = Rsource & CheckDes & (Raddr[3..0] == 0); 
	Daddr[47..44].ena = Rsource & CheckDes & (Raddr[3..0] == 1);
	Daddr[35..32].ena = Rsource & CheckDes & (Raddr[3..0] == 2);
 	Daddr[39..36].ena = Rsource & CheckDes & (Raddr[3..0] == 3);
	Daddr[27..24].ena = Rsource & CheckDes & (Raddr[3..0] == 4);
	Daddr[31..28].ena = Rsource & CheckDes & (Raddr[3..0] == 5);
	Daddr[19..16].ena = Rsource & CheckDes & (Raddr[3..0] == 6);
	Daddr[23..20].ena = Rsource & CheckDes & (Raddr[3..0] == 7); 
	Daddr[11..8].ena  = Rsource & CheckDes & (Raddr[3..0] == 8);
	Daddr[15..12].ena = Rsource & CheckDes & (Raddr[3..0] == 9);
	Daddr[3..0].ena   = Rsource & CheckDes & (Raddr[3..0] == 10);
	Daddr[7..4].ena   = Rsource & CheckDes & (Raddr[3..0] == 11);

-- фиксируем опорные константы:

    Rkop[3..0].d           = Rdata[3..0];  -- kop[3..0]
	Rdev_number[3..0].d    = Rdata[3..0];  -- dev_number[3..0]
	Rstat_cor.d            = Rdata[0];     -- (gnd,calibr,pachka,stat_cor)
	Rpachka.d              = Rdata[1];
	Rcalibr.d              = Rdata[2];
	n_burst[1..0]		   = Rdata[1..0];
	Rnumber_n[3..0].d      = Rdata[3..0];  -- number_n[3..0]
	Rnumber_n[7..4].d      = Rdata[3..0];  -- number_n[7..4]                                   
	Rnumber_n[11..8].d     = Rdata[3..0];  -- number_n[11..8]
	Rnumber_n[15..12].d    = Rdata[3..0];  -- number_n[15..12] 
	Rnumber_p[3..0].d      = Rdata[3..0];  -- number_p[3..0]
	Rnumber_p[7..4].d      = Rdata[3..0];  -- number_p[7..4]
	Rnumber_p[11..8].d     = Rdata[3..0];  -- number_p[11..8] 
	Rnumber_p[15..12]      = Rdata[3..0];  -- number_p[15..12] 
	Rzap_delay[3..0].d     = Rdata[3..0];  -- zap_delay[3..0]
	Rzap_delay[7..4].d     = Rdata[3..0];  -- zap_delay[7..4]
	Rzap_delay[11..8].d    = Rdata[3..0];  -- zap_delay[11..8]
	Rzap_delay[15..12].d   = Rdata[3..0];  -- zap_delay[15..12] 
	
	Rkop[3..0].ena         = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 0);
	Rdev_number[3..0].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 1);
	Rstat_cor.ena          = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 3);
	Rpachka.ena            = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 3);
	Rcalibr.ena            = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 3);
	n_burst[1..0].ena	   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 2);
	Rnumber_n[3..0].ena    = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 4);
	Rnumber_n[7..4].ena    = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 5);
	Rnumber_n[11..8].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 6); 
	Rnumber_n[15..12].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 7);
	Rnumber_p[3..0].ena    = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 8);
	Rnumber_p[7..4].ena    = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 9);
	Rnumber_p[11..8].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 10);
	Rnumber_p[15..12].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 11); 
	Rzap_delay[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 12);
	Rzap_delay[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 13);
	Rzap_delay[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 14);
	Rzap_delay[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 15);
	
	(Rkop[3..0],Rdev_number[3..0],Rstat_cor,Rpachka,Rcalibr, n_burst[1..0]).clk  = RX_CLK;
	(Rnumber_n[15..0],Rnumber_p[15..0],Rzap_delay[15..0]).clk     				 = RX_CLK;
	(Rkop[3..0],Rdev_number[3..0],Rstat_cor,Rpachka,Rcalibr).clrn				 = reset;
	(Rnumber_n[15..0],Rnumber_p[15..0],Rzap_delay[15..0]).clrn   				 = reset;
	
	rg_DACA[3..0].d     = Rdata[3..0]; 
	rg_DACA[7..4].d     = Rdata[3..0]; 
	rg_DACA[11..8].d    = Rdata[3..0]; 
	rg_DACA[15..12].d   = Rdata[3..0]; 
	rg_DACA[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 16) & (Rdev_number[3..0] == 0);
	rg_DACA[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 17) & (Rdev_number[3..0] == 0);
	rg_DACA[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 18) & (Rdev_number[3..0] == 0);
	rg_DACA[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 19) & (Rdev_number[3..0] == 0);
	rg_DACA[15..0].clk  = RX_CLK; 
	
	rg_DACB[3..0].d     = Rdata[3..0]; 
	rg_DACB[7..4].d     = Rdata[3..0]; 
	rg_DACB[11..8].d    = Rdata[3..0]; 
	rg_DACB[15..12].d   = Rdata[3..0];
	rg_DACB[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 20) & (Rdev_number[3..0] == 0);
	rg_DACB[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 21) & (Rdev_number[3..0] == 0);
	rg_DACB[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 22) & (Rdev_number[3..0] == 0);
	rg_DACB[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 23) & (Rdev_number[3..0] == 0);
	rg_DACB[15..0].clk  = RX_CLK;  
	
	rg_DACC[3..0].d     = Rdata[3..0]; 
	rg_DACC[7..4].d     = Rdata[3..0]; 
	rg_DACC[11..8].d    = Rdata[3..0]; 
	rg_DACC[15..12].d   = Rdata[3..0];
	rg_DACC[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 24) & (Rdev_number[3..0] == 0);
	rg_DACC[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 25) & (Rdev_number[3..0] == 0);
	rg_DACC[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 26) & (Rdev_number[3..0] == 0);
	rg_DACC[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 27) & (Rdev_number[3..0] == 0);
	rg_DACC[15..0].clk  = RX_CLK; 
	
	rg_DACD[3..0].d     = Rdata[3..0]; 
	rg_DACD[7..4].d     = Rdata[3..0]; 
	rg_DACD[11..8].d    = Rdata[3..0]; 
	rg_DACD[15..12].d   = Rdata[3..0];
	rg_DACD[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 28) & (Rdev_number[3..0] == 0);
	rg_DACD[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 29) & (Rdev_number[3..0] == 0);
	rg_DACD[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 30) & (Rdev_number[3..0] == 0);
	rg_DACD[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 31) & (Rdev_number[3..0] == 0); 
	rg_DACD[15..0].clk  = RX_CLK; 
	
	rg_DACE[3..0].d     = Rdata[3..0]; 
	rg_DACE[7..4].d     = Rdata[3..0]; 
	rg_DACE[11..8].d    = Rdata[3..0]; 
	rg_DACE[15..12].d   = Rdata[3..0]; 
	rg_DACE[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 32) & (Rdev_number[3..0] == 0);
	rg_DACE[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 33) & (Rdev_number[3..0] == 0);
	rg_DACE[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 34) & (Rdev_number[3..0] == 0);
	rg_DACE[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 35) & (Rdev_number[3..0] == 0); 
	rg_DACE[15..0].clk  = RX_CLK; 
	
	rg_DACF[3..0].d     = Rdata[3..0]; 
	rg_DACF[7..4].d     = Rdata[3..0]; 
	rg_DACF[11..8].d    = Rdata[3..0]; 
	rg_DACF[15..12].d   = Rdata[3..0];
	rg_DACF[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 36) & (Rdev_number[3..0] == 0);
	rg_DACF[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 37) & (Rdev_number[3..0] == 0);
	rg_DACF[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 38) & (Rdev_number[3..0] == 0);
	rg_DACF[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 39) & (Rdev_number[3..0] == 0);
	rg_DACF[15..0].clk  = RX_CLK;  
	
	rg_DACG[3..0].d     = Rdata[3..0]; 
	rg_DACG[7..4].d     = Rdata[3..0]; 
	rg_DACG[11..8].d    = Rdata[3..0]; 
	rg_DACG[15..12].d   = Rdata[3..0];
	rg_DACG[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 40) & (Rdev_number[3..0] == 0);
	rg_DACG[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 41) & (Rdev_number[3..0] == 0);
	rg_DACG[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 42) & (Rdev_number[3..0] == 0);
	rg_DACG[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 43) & (Rdev_number[3..0] == 0); 
	rg_DACG[15..0].clk  = RX_CLK;
	
	rg_DACH[3..0].d     = Rdata[3..0]; 
	rg_DACH[7..4].d     = Rdata[3..0]; 
	rg_DACH[11..8].d    = Rdata[3..0]; 
	rg_DACH[15..12].d   = Rdata[3..0];
	rg_DACH[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 44) & (Rdev_number[3..0] == 0);
	rg_DACH[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 45) & (Rdev_number[3..0] == 0);
	rg_DACH[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 46) & (Rdev_number[3..0] == 0);
	rg_DACH[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 47) & (Rdev_number[3..0] == 0);
	rg_DACH[15..0].clk  = RX_CLK;  
	
	foto_DACA[3..0].d     = Rdata[3..0]; 
	foto_DACA[7..4].d     = Rdata[3..0]; 
	foto_DACA[11..8].d    = Rdata[3..0]; 
	foto_DACA[15..12].d   = Rdata[3..0]; 
	foto_DACA[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 16) & (Rdev_number[3..0] == 1);
	foto_DACA[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 17) & (Rdev_number[3..0] == 1);
	foto_DACA[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 18) & (Rdev_number[3..0] == 1);
	foto_DACA[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 19) & (Rdev_number[3..0] == 1);
	foto_DACA[15..0].clk  = RX_CLK; 
	
	foto_DACB[3..0].d     = Rdata[3..0]; 
	foto_DACB[7..4].d     = Rdata[3..0]; 
	foto_DACB[11..8].d    = Rdata[3..0]; 
	foto_DACB[15..12].d   = Rdata[3..0];
	foto_DACB[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 20) & (Rdev_number[3..0] == 1);
	foto_DACB[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 21) & (Rdev_number[3..0] == 1);
	foto_DACB[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 22) & (Rdev_number[3..0] == 1);
	foto_DACB[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 23) & (Rdev_number[3..0] == 1);
	foto_DACB[15..0].clk  = RX_CLK;  
	
	foto_DACC[3..0].d     = Rdata[3..0]; 
	foto_DACC[7..4].d     = Rdata[3..0]; 
	foto_DACC[11..8].d    = Rdata[3..0]; 
	foto_DACC[15..12].d   = Rdata[3..0];
	foto_DACC[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 24) & (Rdev_number[3..0] == 1);
	foto_DACC[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 25) & (Rdev_number[3..0] == 1);
	foto_DACC[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 26) & (Rdev_number[3..0] == 1);
	foto_DACC[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 27) & (Rdev_number[3..0] == 1);
	foto_DACC[15..0].clk  = RX_CLK; 
	
	foto_DACD[3..0].d     = Rdata[3..0]; 
	foto_DACD[7..4].d     = Rdata[3..0]; 
	foto_DACD[11..8].d    = Rdata[3..0]; 
	foto_DACD[15..12].d   = Rdata[3..0];
	foto_DACD[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 28) & (Rdev_number[3..0] == 1);
	foto_DACD[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 29) & (Rdev_number[3..0] == 1);
	foto_DACD[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 30) & (Rdev_number[3..0] == 1);
	foto_DACD[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 31) & (Rdev_number[3..0] == 1); 
	foto_DACD[15..0].clk  = RX_CLK; 
	
	foto_DACE[3..0].d     = Rdata[3..0]; 
	foto_DACE[7..4].d     = Rdata[3..0]; 
	foto_DACE[11..8].d    = Rdata[3..0]; 
	foto_DACE[15..12].d   = Rdata[3..0]; 
	foto_DACE[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 32) & (Rdev_number[3..0] == 1);
	foto_DACE[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 33) & (Rdev_number[3..0] == 1);
	foto_DACE[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 34) & (Rdev_number[3..0] == 1);
	foto_DACE[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 35) & (Rdev_number[3..0] == 1); 
	foto_DACE[15..0].clk  = RX_CLK; 
	
	foto_DACF[3..0].d     = Rdata[3..0]; 
	foto_DACF[7..4].d     = Rdata[3..0]; 
	foto_DACF[11..8].d    = Rdata[3..0]; 
	foto_DACF[15..12].d   = Rdata[3..0];
	foto_DACF[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 36) & (Rdev_number[3..0] == 1);
	foto_DACF[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 37) & (Rdev_number[3..0] == 1);
	foto_DACF[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 38) & (Rdev_number[3..0] == 1);
	foto_DACF[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 39) & (Rdev_number[3..0] == 1);
	foto_DACF[15..0].clk  = RX_CLK;  
	
	foto_DACG[3..0].d     = Rdata[3..0]; 
	foto_DACG[7..4].d     = Rdata[3..0]; 
	foto_DACG[11..8].d    = Rdata[3..0]; 
	foto_DACG[15..12].d   = Rdata[3..0];
	foto_DACG[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 40) & (Rdev_number[3..0] == 1);
	foto_DACG[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 41) & (Rdev_number[3..0] == 1);
	foto_DACG[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 42) & (Rdev_number[3..0] == 1);
	foto_DACG[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 43) & (Rdev_number[3..0] == 1); 
	foto_DACG[15..0].clk  = RX_CLK;
	
	foto_DACH[3..0].d     = Rdata[3..0]; 
	foto_DACH[7..4].d     = Rdata[3..0]; 
	foto_DACH[11..8].d    = Rdata[3..0]; 
	foto_DACH[15..12].d   = Rdata[3..0];
	foto_DACH[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 44) & (Rdev_number[3..0] == 1);
	foto_DACH[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 45) & (Rdev_number[3..0] == 1);
	foto_DACH[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 46) & (Rdev_number[3..0] == 1);
	foto_DACH[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 47) & (Rdev_number[3..0] == 1);
	foto_DACH[15..0].clk  = RX_CLK;	
	
	
	rg_DAC_ROFS[3..0].d     = Rdata[3..0]; 
	rg_DAC_ROFS[7..4].d     = Rdata[3..0]; 
	rg_DAC_ROFS[11..8].d    = Rdata[3..0]; 
	rg_DAC_ROFS[15..12].d   = Rdata[3..0];
	rg_DAC_ROFS[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 48);
	rg_DAC_ROFS[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 49);
	rg_DAC_ROFS[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 50);
	rg_DAC_ROFS[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 51);
	rg_DAC_ROFS[15..0].clk  = RX_CLK; 
	
	rg_DAC_BIAS[3..0].d     = Rdata[3..0]; 
	rg_DAC_BIAS[7..4].d     = Rdata[3..0]; 
	rg_DAC_BIAS[11..8].d    = Rdata[3..0]; 
	rg_DAC_BIAS[15..12].d   = Rdata[3..0];
	rg_DAC_BIAS[3..0].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 52);
	rg_DAC_BIAS[7..4].ena   = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 53);
	rg_DAC_BIAS[11..8].ena  = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 54);
	rg_DAC_BIAS[15..12].ena = Rdatafield & CheckDes & (Raddr[15..6] == 0) & (Raddr[5..0] == 55);
	rg_DAC_BIAS[15..0].clk  = RX_CLK; 

	
-- прием массива данных в двухпортовое буферное ЗУ

dp_ram.data[31..0]	   = (Rdata[3..0],data_in_eth[27..0]);
dp_ram.rdaddress[9..0] = cou_rd_data[];
dp_ram.rdclock	       = TXclk;                            -- перепривязать к txclk!
dp_ram.wraddress[9..0] = (n_burst[1..0], waddr_eth[]);
dp_ram.wrclock	       = RX_CLK;
dp_ram.wren	           = wren;

data_ou_eth[31..0]     = dp_ram.q[31..0];

-- вспомогательные регистры

data_in_eth[3..0].d   = Rdata[3..0];
data_in_eth[7..4].d   = Rdata[3..0];
data_in_eth[11..8].d  = Rdata[3..0];
data_in_eth[15..12].d  = Rdata[3..0];
data_in_eth[19..16].d  = Rdata[3..0];
data_in_eth[23..20].d  = Rdata[3..0];
data_in_eth[27..24].d  = Rdata[3..0];

data_in_eth[27..0].clk = RX_CLK;

-- счетчик адреса записи

waddr_eth[].d    = waddr_eth[].q + 1;
waddr_eth[].ena  = wren;
waddr_eth[].clk  = RX_CLK;
waddr_eth[].clrn = Rdatafield;

--Корректирующие константы

IF Rdatafield & CheckDes & !(Raddr[15..6] == 0) & (Rkop[3..0] == 9) THEN  	    
  
    CASE Raddr[2..0] IS	
        WHEN 0  =>  data_in_eth[3..0].ena  	= vcc;
                    data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = gnd;
                    data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
		            wren                   	= gnd; 
		WHEN 1  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= vcc;
		            data_in_eth[11..8].ena 	= gnd;
		            data_in_eth[15..12].ena = gnd;
		            data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
		            wren                   	= gnd;    
		WHEN 2  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
		            data_in_eth[11..8].ena 	= vcc;
		            data_in_eth[15..12].ena = gnd;
		            data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
                    wren                   	= gnd; 
		WHEN 3  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = vcc;
                    data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
                    wren                   	= vcc;
        WHEN 4  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = gnd;
                    data_in_eth[19..16].ena = vcc;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
                    wren                   	= vcc;
        WHEN 5  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = gnd;
                    data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = vcc;
                    data_in_eth[27..24].ena = gnd;
                    wren                   	= vcc;
        WHEN 6  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = gnd;
                    data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = vcc;
                    wren                   	= vcc;
        WHEN 7  =>  data_in_eth[3..0].ena  	= gnd;
		            data_in_eth[7..4].ena  	= gnd;
                    data_in_eth[11..8].ena 	= gnd;
                    data_in_eth[15..12].ena = gnd;
                    data_in_eth[19..16].ena = gnd;
                    data_in_eth[23..20].ena = gnd;
                    data_in_eth[27..24].ena = gnd;
                    wren                   	= vcc;          
   END CASE;
END IF;	                     
		             	
END;