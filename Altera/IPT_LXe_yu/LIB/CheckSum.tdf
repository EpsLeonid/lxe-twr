Title "Ethernet_Checksum";

INCLUDE "lpm_shiftreg.inc" ;
INCLUDE "lpm_counter.inc" ;
INCLUDE "lpm_add_sub.inc";
INCLUDE "EdgeSensing.inc";

SUBDESIGN CheckSum
(

Data[15..0]					: input;
CheckSum[15..0]				: output;
Strobe						: input;
Eth_reset					: input;
CheckSum_done				: output;

)

VARIABLE

Summ						: lpm_add_sub with (lpm_width=17, lpm_representation="signed", lpm_direction="ADD", lpm_pipeline=1);

Reg_Checksum				: lpm_shiftreg with (LPM_WIDTH = 16, LPM_DIRECTION="unused"); -- регистр Checksum

BEGIN

--******************* Checksum *******************

Summ.(clock, clken) = (Clk25, Strobe);
Summ.aclr = !Strobe;
IF Summ.result[16] == VCC 
		Then Summ.(dataa[15..0], datab[]) = (Summ.result[15..0], b"1");
		Else Summ.(dataa[15..0], datab[15..0]) = (Summ.result[15..0], Data[15..0]);
END IF;

Delay_Eth_strobe = DFF (.d = Strobe, .clk = Clk25, .clrn = !Eth_reset);
Reg_Checksum.(data[],clock,load,enable) = (Summ.result[], Clk25, (!Strobe AND Delay_Eth_strobe.q), VCC);
CheckSum = Reg_Checksum.q;

END;