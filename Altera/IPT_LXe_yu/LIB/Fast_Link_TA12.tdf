Title "Fast_Link_TA12"

INCLUDE "lpm_shiftreg.inc" ;
INCLUDE "lpm_counter.inc" ;
INCLUDE "lpm_ff.inc";
INCLUDE "EdgeSensing.inc" ;
INCLUDE "LevelSensing.inc" ;
INCLUDE "DelayLine.inc" ;
INCLUDE "PulseShaper.inc" ;
INCLUDE "Hist_RAM.inc";

SUBDESIGN Fast_Link_TA12
(
-- General Signals
DigitInit				: input; -- initiates a Cycle of data processing (Temporary!)
RegInit					: input;
Clock					: input; -- Global FPGA Clock, assumed 100MHz for project 
Reset					: input; -- Common FPGA Reset
TA12data[11..0]			: input; -- Входные данные с АЦП
DataBus_In[15..0]		: input; -- отправляемые с Внутренней Шины в Линк данные
DataBusOut[15..0]		: output; -- выдаваемые на Внутреннюю Шину из памяти данные
Working					: output;
Working1				: input;
WriteRAM				: input;

Error					: output; -- сигнал ошибки (неверная команда)
Select					: input;  -- Выбор Модуля для работы с памятью Командного Листа в режиме Slave (с КАМАК-ом)
DirectIn				: input;  -- направление передачи данных, Если =GND, то данный Модуль читается, если =VCC, то пишется.
AddrBus_In[9..0]		: input;  -- адрес при операциях доступа чтения/записи Командного Листа с КАМАК-а
DataBusStrobe			: input;  -- строб приема/передачи данных наружу (высокий уровень, используя его как Enable, "защелкиваем" по заднему фронту

test[9..0]				: output ; -- to be conected to test output of main Project 
)

VARIABLE

--********  Cycle proceeding units  ********
-- Cycle initiation circuitry
DigitInit1				: node; -- stretcher of "DigitInit" signal
DigitInit2,
DigitInit3				: node; -- 2-clock _/^^\_ in the beginning of Cycle
--	Working				: node; -- Flag: Cycle in progress, declared as Output
InitSet					: node; -- 1-clock _/^\_ for initializing the counters
DigitEnd				: node; -- _/^^\_ at the end of Loading Cycle

HistRAM					: Hist_RAM;
HistRAM					: node;
Hist_Ct					: LPM_COUNTER with (lpm_width = 10, lpm_direction="up" ); -- 
Hist_RAMAddrBus			: lpm_shiftreg with (LPM_WIDTH = 10, LPM_DIRECTION="unused");
Hist_RAMAddr[9..0]		: node;
StopWrite				: node;
Ram_Sel					: node; -- мультиплексор для выбора обращения к памятям

AllReset				: SRFF; -- общий сброс
TimeOutSch				: node;
ENDCycle				: node; -- флаг окончание работы цикла

BEGIN

DEFAULTS

	ENDCycle 			= GND;

END DEFAULTS;

HistRAM.data_a[11..0] = TA12data[11..0];
HistRAM.data_a[15..12] = GND;
HistRAM.(address_a[], clock_a, wren_a) = (Hist_Ct.q[9..0], Сlock, !StopWrite);

HistRAM.(data_b[],address_b[], clock_b)= (DataBus_In[],AddrBus_In[9..0], Сlock);
HistRAM.wren_b = DataBusStrobe and DirectIn AND Select AND Ram_Sel;

Hist_Ct.clock = Clock;
Hist_Ct.sclr = (EdgeSensing(.D= Working1, .clk=Сlock, .reset=RESET) & WriteRAM);
Hist_Ct.clk_en = VCC;
Hist_Ct.cnt_en = !StopWrite;

IF Hist_Ct.q[] == b"1111111111" THEN StopWrite = VCC;
								ELSE StopWrite = GND;
END IF;

	Hist_RAMAddrBus.(data[], clock, load, enable) = (Hist_Ct.q[], ADC_Clock, VCC, !ENDCycle);
	Hist_RAMAddr[9..0] = Hist_RAMAddrBus.q[9..0] +1 + AddrBus_In[9..0]; -- выставление адреса в 0 для текущего значения счетчика адресса

IF(AddrBus_In[] >= 0 AND AddrBus_In[] <= 767) THEN DataBusOut[15..0] = Hist_RAM.q_b[]; RAM_Sel = VCC;
											  ELSE RAM_Sel = GND;
END IF;

END;
