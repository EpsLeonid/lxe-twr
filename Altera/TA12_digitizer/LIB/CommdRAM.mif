-- Copyright (C) 1991-2010 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)

WIDTH=16;
DEPTH=1024;

ADDRESS_RADIX=DEC;
DATA_RADIX=DEC;

CONTENT BEGIN
--============================================================================
--************  "CommdLst_Rd000" Operation #193    *******************************
--************    = "Start_Regul" Operation    *******************************
--  Read  62words from ADC's RAM

	0     :   4352;
	1     :   4353;
	2     :   4354;
	3     :   4355;
	4     :   4356;
	5     :   4357;
	6     :   4358;
	7     :   4359;
	8     :   4360;
	9     :   4361;
	10    :   4362;
	11    :   4363;
	12    :   4364;
	13    :   4365;
	14    :   4366;
	15    :   4367;
	16    :   4368;
	17    :   4369;
	18    :   4370;
	19    :   4371;
	20    :   4372;
	21    :   4373;
	22    :   4374;
	23    :   4375;
	24    :   4376;
	25    :   4377;
	26    :   4378;
	27    :   4379;
	28    :   4380;
	29    :   4381;
	30    :   4382;
	31    :   4383;
	32    :   4384;
	33    :   4385;
	34    :   4386;
	35    :   4387;
	36    :   4388;
	37    :   4389;
	38    :   4390;
	39    :   4391;
	40    :   4392;
	41    :   4393;
	42    :   4394;
	43    :   4395;
	44    :   4396;
	45    :   4870;
	46    :   5894;
	47    :   6918;
	48    :   7942;
	49    :   4866;
	50    :   4867;
	51    :   4868;
	52    :   5891;
	53    :   5892;
	54    :   6915;
	55    :   6916;
	56    :   7939;
	57    :   7940;
	58    :   4872;
	59    :   5896;
	60    :   6920;
	61    :   7944;
--	[ 62.. 63]  :    65535; -- B"1111111111111111"
	[62..63]  :   28672;

--============================================================================
--************ "CommdLst_Wr001" Operation ************************************
--************    = "Block_Begin" Operation    *******************************
--  Write  2 words:  MainRAM     @#769 == OpCode==202
--                   ControlStatus Reg == B"1010" (default value)
--  Herein the Addresses to be re-written are listed; 
--      correspondent data are stored at addresses (512+ 64), ... , (512+127)

	64    :   769;
	65    :   2048;
	66    :   770;
	67    :   771;
	68    :   772;
	69    :   773;
	[70..127]  :   65535; -- B"1111111111111111"

--============================================================================
--************  "CommdLst_Rd010" Operation #210    *******************************
--************    = "Start_Alter" Operation    *******************************
--  Without sening a new Ethernet Packet, just read the contents of the EtherRAM
--  Read  CSReg, "UDPlength", "UDP_PkNum", "EthPause"

	128   :   2048;
	129   :   2052;
	130   :   2053;
	131   :   2054;
	132   :   2055;
	133   :   2082;
	134   :   8202;
	135   :   8203;
	136   :   26880;
	137   :   26881;
	138   :   26882;
	139   :   26883;
	140   :   26884;
	141   :   26885;
	[142..143]  :   26886;
	144   :   28672;
	145   :   28673;
	146   :   28674;
	147   :   28675;
	148   :   28676;
	149   :   28677;
	150   :   28678;
	151   :   28679;
	152   :   28680;
	153   :   28681;
	154   :   28682;
	155   :   28683;
	156   :   28684;
	157   :   28685;
	158   :   28686;
	159   :   28687;
	160   :   28688;
	161   :   28689;
	162   :   28690;
	163   :   28691;
	164   :   28692;
	165   :   28693;
	166   :   28694;
	167   :   28695;
	168   :   28696;
	169   :   28697;
	170   :   28698;
	171   :   28699;
	172   :   28700;
	173   :   28701;
	174   :   28702;
	175   :   28703;
	176   :   28704;
	177   :   28705;
	178   :   28706;
	179   :   28707;
	180   :   28708;
	181   :   28709;
	182   :   28710;
	183   :   28711;
	184   :   28712;
	185   :   28713;
	186   :   28714;
	187   :   28715;
	188   :   28716;
	189   :   28717;
	190   :   28718;
	191   :   28719;

--============================================================================
--************  "CommdLst_Wr011" Operation  **********************************
--************    = "Block_End" Operation      *******************************
--  Write  2 words:  MainRAM     @#769 == OpCode==217
--                   ControlStatus Reg == B"1010" (default value)
--      correspondent data are stored at addresses (512+192), ... , (512+255)

	192   :   769;
	193   :   2048;
	194   :   770;
	195   :   771;
	196   :   772;
	197   :   773;
	[198..255]  :   65535;

--============================================================================
--************  "CommdLst_Rd100" Operation #226 **********************************
--  Read configuration values:
--    CSReg, "UDPlength", "UDP_PkNum", "EthPause", 
--    ARP-Req/Rep data, UDP-header' data 
--  Herein the Addresses to be readout are listed

	256   :   2048;
	257   :   2052;
	258   :   2053;
	259   :   2054;
	260   :   2055;
	261   :   2082;
	262   :   8202;
	263   :   8203;
	264   :   26880;
	265   :   26881;
	266   :   26882;
	267   :   26883;
	268   :   26884;
	269   :   26885;
	[270..271]  :   26886;
	272   :   28672;
	273   :   28673;
	274   :   28674;
	275   :   28675;
	276   :   28676;
	277   :   28677;
	278   :   28678;
	279   :   28679;
	280   :   28680;
	281   :   28681;
	282   :   28682;
	283   :   28683;
	284   :   28684;
	285   :   28685;
	286   :   28686;
	287   :   28687;
	288   :   28688;
	289   :   28689;
	290   :   28690;
	291   :   28691;
	292   :   28692;
	293   :   28693;
	294   :   28694;
	295   :   28695;
	296   :   28696;
	297   :   28697;
	298   :   28698;
	299   :   28699;
	300   :   28700;
	301   :   28701;
	302   :   28702;
	303   :   28703;
	304   :   28704;
	305   :   28705;
	306   :   28706;
	307   :   28707;
	308   :   28708;
	309   :   28709;
	310   :   28710;
	311   :   28711;
	312   :   28712;
	313   :   28713;
	314   :   28714;
	315   :   28715;
	316   :   28716;
	317   :   28717;
	318   :   28718;
	319   :   28719;

--============================================================================
--************  "CommdLst_Wr101" Operation #233  **********************************
--  Write configuration values: 
--  Herein the Addresses to be re-written are listed; 
--      correspondent data are listed at addresses (512+320), ... , (512+383)

	[320..383]  :	 65535; -- B"1111111111111111"

--============================================================================
--************ "Read110" Operation #241 *******************************************

	[384..447]  :	 65535; -- B"1111111111111111"

--============================================================================
--************ "Write111" Operation #250 ******************************************
--  Reserved Command for UFO32 module
--		correspondent data are listed at addresses (512+448), ...

	[448..511]  :	 65535; -- B"1111111111111111"

--============================================================================
	[512..575]  :	0; -- data correspondent to "Read000" #193

--============================================================================
--************  Data_Page for "CommdLst_Wr001" Operation #202  ********************
--************    = "Block_Begin" Operation    *******************************
--  Write  2 words:   OpCode      == 202 (this OpCode), 
--                    CSR value   ==  10 (default value)

	576        :      202; -- store OpCode==202 (for test)
--	577        :        8; -- write "Blocking" value into CSR (Mode="UDP", StartMulti=0)
	577        :        4; -- write "Blocking" value into CSR (Mode="CMD3", StartMulti=0)

	578   :   16;
	579   :   32;
	580   :   64;
	581   :   128;
	[582..639]  :    65535; -- B"1111111111111111" into ZERO object
--============================================================================

	[640..703]  :	0; -- data correspondent to "Read010" #210

--============================================================================
--************  Data_Page for "CommdLst_Wr011" Operation  ********************
--************    = "Block_End" Operation      *******************************
--  Write  2 words:   1 CSReg value (must be loaded same as in CommdLst_Wr101) 

 	704        :      217; -- store OpCode (for test)  == 217
	--705        :       10; -- write default value into CSR (Mode="UDP", StartMulti=1)
	705        :        6; -- write default value into CSR (Mode="CMD3", StartMulti=1)

	706        :      256; -- write  #256 (for test)
	707        :      512; -- write  #512 (for test)
	708        :     1024; -- write #1024 (for test)
	709        :     2048; -- write #2048 (for test)

	[710..767]  :    65535; -- B"1111111111111111"

--============================================================================
[768..831]  :	0; -- data correspondent to "Read100" #226

--============================================================================
[832..895]  :	0; -- data correspondent to "Write101" #210

--============================================================================
[896..959]  :	0; -- data correspondent to "Read110" #241

--============================================================================
[960..1023] :	0; -- data correspondent to "Write111" #210

END;